{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortCases","goodsFromServer","App","useState","sortCase","setSortCase","isReversed","setIsReversed","sortedGoods","goods","preparedGoods","sort","good1","good2","Alphabet","localeCompare","Length","length","reverse","getPreparedGoods","resetPossible","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAwBKA,E,0EAlBQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAQGD,K,oBAAAA,E,iBAAAA,M,KA6BE,IAAME,EAAgB,WAC3B,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA3BR,SACEC,EADF,GAGa,IADTL,EACQ,EADRA,SAAUE,EACF,EADEA,WAENI,EAAa,YAAOD,GAiB1B,OAfIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EAAUc,SACb,OAAOF,EAAMG,cAAcF,GAE7B,KAAKb,EAAUgB,OACb,OAAOJ,EAAMK,OAASJ,EAAMI,OAE9B,QACE,OAAO,MAKRX,EAAaI,EAAcQ,UAAYR,EAO1CS,CAAiBlB,EAAiB,CAAEG,WAAUE,eAOlD,IAAMc,EAAgBhB,GAAYE,EAElC,OACE,sBAAKe,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAOjB,EAAYL,EAAUc,WACtCS,KAAK,SACLF,UAAWG,IACT,SACA,UACA,CAAE,WAAYpB,IAAaJ,EAAUc,WANzC,iCAYA,wBACEQ,QAAS,kBAAOjB,EAAYL,EAAUgB,SACtCO,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,WAAYpB,IAAaJ,EAAUgB,SANzC,4BAYA,wBACEM,QAAS,kBAAMf,GAAeD,IAC9BiB,KAAK,SACLF,UAAWG,IACT,SACA,aACA,CAAE,YAAalB,IANnB,qBAYCc,GACC,wBACEE,QAhDV,WACEjB,EAAY,IACZE,GAAc,IA+CNgB,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGb,EAAYiB,KAAI,SAAAC,GAAI,OACnB,oBAAe,UAAQ,OAAvB,SACGA,GADMA,YCnHnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.21d39c59.chunk.js","sourcesContent":["// import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport React, { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ninterface PreparedGoodsParams {\n  sortCase: string;\n  isReversed: boolean;\n}\n\nenum SortCases {\n  Alphabet = 'alphabet',\n  Length = 'length',\n}\n\nfunction getPreparedGoods(\n  goods: string[],\n  { sortCase, isReversed }: PreparedGoodsParams,\n): string[] {\n  const preparedGoods = [...goods];\n\n  if (sortCase) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortCase) {\n        case SortCases.Alphabet:\n          return good1.localeCompare(good2);\n\n        case SortCases.Length:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  return isReversed ? preparedGoods.reverse() : preparedGoods;\n}\n\nexport const App: React.FC = () => {\n  const [sortCase, setSortCase] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const sortedGoods\n    = getPreparedGoods(goodsFromServer, { sortCase, isReversed });\n\n  function handleReset(): void {\n    setSortCase('');\n    setIsReversed(false);\n  }\n\n  const resetPossible = sortCase || isReversed;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => (setSortCase(SortCases.Alphabet))}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortCase !== SortCases.Alphabet },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => (setSortCase(SortCases.Length))}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortCase !== SortCases.Length },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {resetPossible && (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li key={good} data-cy=\"Good\">\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}